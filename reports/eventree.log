Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda3/envs/jupyter_notebook/lib/python3.7/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ofstream fout(getenv("OUTPUT_PATH"));

string t_nodes_edges_temp;
getline(cin, t_nodes_edges_temp);

vector<string> t_nodes_edges = split(rtrim(t_nodes_edges_temp));

int t_nodes = stoi(t_nodes_edges[0]);
int t_edges = stoi(t_nodes_edges[1]);

vector<int> t_from(t_edges);
vector<int> t_to(t_edges);

for (int i = 0; i < t_edges; i++) {
    string t_from_to_temp;
    getline(cin, t_from_to_temp);

    vector<string> t_from_to = split(rtrim(t_from_to_temp));

    int t_from_temp = stoi(t_from_to[0]);
    int t_to_temp = stoi(t_from_to[1]);

    t_from[i] = t_from_temp;
    t_to[i] = t_to_temp;
}

int res = evenForest(t_nodes, t_edges, t_from, t_to);

fout << res << "\n";

fout.close();

return 0;
------------------

Standard Exception: stoi
Standard Exception: stoi

